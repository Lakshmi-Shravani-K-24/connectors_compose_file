const fs = require('fs');

function calculateSeverityCounts(data) {
    try {
        const trivyOutput = JSON.parse(data);
        const severityCounts = {
            UNKNOWN: 0,
            LOW: 0,
            MEDIUM: 0,
            HIGH: 0,
            CRITICAL: 0
        };

        trivyOutput.Results.forEach(result => {
            if (result.Vulnerabilities) {
                result.Vulnerabilities.forEach(vulnerability => {
                    const severity = vulnerability.Severity.toUpperCase();
                    severityCounts[severity] = (severityCounts[severity] || 0) + 1;
                });
            }
        });

        return severityCounts;
    } catch (error) {
        console.error('Error parsing JSON:', error);
        throw error;
    }
}

function compareWithStandardCounts(fileData, standardCounts) {
    try {
        const severityCounts = calculateSeverityCounts(fileData);
        let hasExceededStandard = false;

        for (const severity in severityCounts) {
            if (severityCounts[severity] > standardCounts[severity]) {
                hasExceededStandard = true;
                console.log(`File 1 has higher vulnerability count than standard for ${severity}:`);
                console.log(`File 1: ${severityCounts[severity]}, Standard: ${standardCounts[severity]}`);
            }
        }

        if (!hasExceededStandard) {
            console.log("All vulnerabilities are less than or equal to the standard.");
        } else {
            console.log("Vulnerabilities are higher than the standard, exiting with non-zero code.");
            process.exit(1); // Exit with non-zero code
        }
    } catch (error) {
        console.error('Error comparing JSON files:', error);
        throw error;
    }
}

// Reading the contents of the JSON file 1
fs.readFile('./trivy_output_1.json', 'utf8', (err, data) => {
    if (err) {
        console.error('Error reading JSON file:', err);
        process.exit(1); // Exit with non-zero code
    }

    // Reading the standard counts from the standard file
    fs.readFile('./standard_vulnerability_counts.json', 'utf8', (err, standardData) => {
        if (err) {
            console.error('Error reading standard counts file:', err);
            process.exit(1); // Exit with non-zero code
        }

        try {
            const standardCounts = JSON.parse(standardData);
            compareWithStandardCounts(data, standardCounts);
        } catch (error) {
            console.error('Error comparing JSON files:', error);
            process.exit(1); // Exit with non-zero code
        }
    });
});
