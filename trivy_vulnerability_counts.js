const fs = require('fs');

function calculateSeverityCounts(data) {
    const trivyOutput = JSON.parse(data);
    const severityCounts = {
        UNKNOWN: 0,
        LOW: 0,
        MEDIUM: 0,
        HIGH: 0,
        CRITICAL: 0
    };

    trivyOutput.Results.forEach(result => {
        if (result.Vulnerabilities) {
            result.Vulnerabilities.forEach(vulnerability => {
                const severity = vulnerability.Severity.toUpperCase();
                severityCounts[severity] = (severityCounts[severity] || 0) + 1;
            });
        }
    });

    return severityCounts;
}

function compareSeverityCounts(file1Data, file2Data) {
    const severityCounts1 = calculateSeverityCounts(file1Data);
    const severityCounts2 = calculateSeverityCounts(file2Data);

    for (const severity in severityCounts1) {
        if (severityCounts1[severity] > severityCounts2[severity]) {
            console.log(`File 1 has higher vulnerability count for ${severity}:`);
            console.log(`File 1: ${severityCounts1[severity]}, File 2: ${severityCounts2[severity]}`);
        } else if (severityCounts1[severity] < severityCounts2[severity]) {
            console.log(`File 2 has higher vulnerability count for ${severity}:`);
            console.log(`File 2: ${severityCounts2[severity]}, File 1: ${severityCounts1[severity]}`);
        } else {
            console.log(`Both files have the same vulnerability count for ${severity}: ${severityCounts1[severity]}`);
        }
    }
}

// Reading the contents of the JSON files
fs.readFile('./trivy_output_1.json', 'utf8', (err1, data1) => {
    if (err1) {
        console.error('Error reading JSON file 1:', err1);
        return;
    }

    fs.readFile('./trivy_output_2.json', 'utf8', (err2, data2) => {
        if (err2) {
            console.error('Error reading JSON file 2:', err2);
            return;
        }

        try {
            compareSeverityCounts(data1, data2);
        } catch (error) {
            console.error('Error comparing JSON files:', error);
        }
    });
});
